/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package proyectoinf156;

import java.awt.GridLayout;
import java.text.DecimalFormat;
import java.text.DecimalFormatSymbols;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author RuCo
 */
public class FrameGaussSeidel extends javax.swing.JInternalFrame {
    /** Creates new form Jacobi */
    int numVariables;
    Vector<pnlVariables> vPaneles;
    DefaultTableModel modelo;
    double[][] matrizIngresada;
    DecimalFormat formateador;

    /**
     * Creates new form FrameGaussSeidel
     */
    public FrameGaussSeidel(int numVariables, double[][] matrizIngresada) {
        initComponents();
        this.matrizIngresada = matrizIngresada;
        modelo = new DefaultTableModel();
        vPaneles = new Vector<pnlVariables>();
        this.numVariables = numVariables;
        modelo.addColumn("N");
        DecimalFormatSymbols simbolos = new DecimalFormatSymbols();
        simbolos.setDecimalSeparator('.');
        formateador = new DecimalFormat("0.00E00");
        for (int i = 0; i < numVariables; i++) {
            pnlVariables pnl = new pnlVariables("X" + (i + 1) + ":");
            panel.setLayout(new GridLayout(i + 1, 1));
            panel.add(pnl);
            vPaneles.addElement(pnl);
            modelo.addColumn("X" + (i + 1));
        }
        modelo.addColumn("Error");
        tabla.setModel(modelo);
    }
    
    private FrameGaussSeidel() {
        throw new UnsupportedOperationException("Not yet implemented");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        panel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtTolerancia = new javax.swing.JTextField();
        txtIteraciones = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tabla = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        txtSolucion = new javax.swing.JTextArea();

        jScrollPane1.setBackground(new java.awt.Color(102, 102, 102));

        panel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Valores Iniciales", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Cambria", 1, 12))); // NOI18N

        javax.swing.GroupLayout panelLayout = new javax.swing.GroupLayout(panel);
        panel.setLayout(panelLayout);
        panelLayout.setHorizontalGroup(
            panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 276, Short.MAX_VALUE)
        );
        panelLayout.setVerticalGroup(
            panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 298, Short.MAX_VALUE)
        );

        jScrollPane1.setViewportView(panel);

        jLabel1.setFont(new java.awt.Font("Cambria", 1, 14)); // NOI18N
        jLabel1.setText("Tolerancia:");

        txtTolerancia.setFont(new java.awt.Font("Cambria", 0, 14)); // NOI18N

        txtIteraciones.setFont(new java.awt.Font("Cambria", 0, 14)); // NOI18N

        jLabel2.setFont(new java.awt.Font("Cambria", 1, 14)); // NOI18N
        jLabel2.setText("Iteraciones:");

        jButton1.setFont(new java.awt.Font("Cambria", 1, 14)); // NOI18N
        jButton1.setText("Calcular");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        tabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane2.setViewportView(tabla);

        txtSolucion.setColumns(20);
        txtSolucion.setFont(new java.awt.Font("Cambria", 1, 14)); // NOI18N
        txtSolucion.setRows(5);
        jScrollPane3.setViewportView(txtSolucion);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 254, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                    .addComponent(jLabel2)
                                    .addGap(18, 18, 18)
                                    .addComponent(txtIteraciones))
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                    .addComponent(jLabel1)
                                    .addGap(18, 18, 18)
                                    .addComponent(txtTolerancia, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 499, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(114, 114, 114)
                        .addComponent(jButton1))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(274, 274, 274)
                        .addComponent(jScrollPane3)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 277, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(txtTolerancia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(txtIteraciones, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(jButton1)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
// TODO add your handling code here:
        boolean variablesLlenas = true;
        double[] valoresIniciales = new double[numVariables];
        for (int i = 0; i < numVariables; i++) {
            pnlVariables pnl = (pnlVariables) panel.getComponent(i);
            JTextField texto = pnl.getTxt();
            valoresIniciales[i] = Double.parseDouble(texto.getText());
            if (texto.getText().equals("")) {
                variablesLlenas = false;
            }
        }
        if (!variablesLlenas) {
            JOptionPane.showMessageDialog(null, "Debe Ingresar todas las variables");
        } else {
            if (txtIteraciones.getText().equals("")) {
                JOptionPane.showMessageDialog(null, "Debe ingresar las iteraciones");
            } else {
                if (txtTolerancia.getText().equals("")) {
                    JOptionPane.showMessageDialog(null, "Debe ingresar la tolerancia");
                } else {
                    calcGaussSeidel(matrizIngresada, valoresIniciales, Integer.parseInt(txtIteraciones.getText()), Double.parseDouble(txtTolerancia.getText()));
                }
            }
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    public void calcGaussSeidel(double[][] matriz, double[] valini, int ite, double tol) {
    int n = matriz.length;

    double[] resultado = new double[n];
    double[] verror = new double[n];

    for (int i = 0; i < n; ++i) {
      resultado[i] = valini[i];
    }
    double error = tol + 1.0D;
    for (int k = 0; (k < ite) && (error > tol); ++k) {
      for (int i = 0; i < n; ++i) {
        double suma = 0.0D;
        for (int j = 0; j < n; ++j) {
          if (j != i) {
            suma += matriz[i][j] * resultado[j];
          }
        }
        resultado[i] = ((matriz[i][n] - suma) / matriz[i][i]);
      }
      Vector fila = new Vector();
            fila.add(k + 1);
            modelo = (DefaultTableModel) tabla.getModel();
      for (int i = 0; i < n; ++i) {
          fila.add(formateador.format(resultado[i]));
        verror[i] = (resultado[i] - valini[i]);
        valini[i] = resultado[i];
      }

      int tam = verror.length;
      double mayor = 0;
            for (int i = 0; i < tam; ++i) {
                if (verror[i] > mayor) {
                    mayor = verror[i];
                }
            }
            error = mayor;
            error = mayor;
            fila.add(formateador.format(error));
            modelo.addRow(fila);
            tabla.setModel(modelo);
    }
     if (error < tol) {
         for (int i = 0; i < n; ++i) {
             txtSolucion.append("X" + (i + 1) + "= " + resultado[i] + "\n");
             
         }
         txtSolucion.append("Error: " + error+"\n");
     } else {
         txtSolucion.setText("Fallo en numero de iteraciones\n");
     }
  }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JPanel panel;
    private javax.swing.JTable tabla;
    private javax.swing.JTextField txtIteraciones;
    private javax.swing.JTextArea txtSolucion;
    private javax.swing.JTextField txtTolerancia;
    // End of variables declaration//GEN-END:variables
}
